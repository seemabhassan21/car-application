version: "3.9"

services:
  web:
    build: .
    container_name: carapp_web
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    build: .
    container_name: carapp_worker
    env_file:
      - .env
    command: /app/celery_worker.sh
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pgrep celery || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  beat:
    build: .
    container_name: carapp_beat
    env_file:
      - .env
    command: /app/celery_beat.sh
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'celery beat' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7
    container_name: carapp_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - redis_data:/data

volumes:
  redis_data:
    driver: local

networks:
  backend:
    driver: bridge
